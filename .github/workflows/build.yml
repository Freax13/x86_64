name: Build

on:
  push:
    branches:
      - "master"
    tags:
      - "*"
  schedule:
    - cron: "40 4 * * *" # every day at 4:40
  pull_request:

jobs:

  bootloader-test:
    name: "Bootloader Integration Test"

    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]

    runs-on: ${{ matrix.platform }}
    timeout-minutes: 15

    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v3

      - name: Cache binaries
        id: cache-bin
        uses: actions/cache@v3
        with:
          path: binaries
          key: ${{ runner.OS }}-binaries
      - name: Add binaries/bin to PATH
        run: echo "$GITHUB_WORKSPACE/binaries/bin" >> $GITHUB_PATH
        shell: bash

      # - name: "Install Rustup Components"
        # run: rustup component add rust-src llvm-tools-preview
        # shell: bash

      - name: "Install Rustup Components"
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
          components: rust-src, llvm-tools-preview
      - name: "Install cargo-xbuild"
        run: cargo install cargo-xbuild --debug --root binaries
      - name: "Install bootimage"
        run: cargo install bootimage --debug --root binaries

        # install QEMU
      - name: Install QEMU (Linux)
        run: |
          sudo apt update
          sudo apt install qemu-system-x86
        if: runner.os == 'Linux'
      - name: Install QEMU (macOS)
        run: brew install qemu
        if: runner.os == 'macOS'
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
          HOMEBREW_NO_BOTTLE_SOURCE_FALLBACK: 1
          HOMEBREW_NO_INSTALL_CLEANUP: 1
      - name: Install QEMU (Windows)
        run: |
          choco install qemu --version 2021.5.5
          echo "$Env:Programfiles\qemu" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        if: runner.os == 'Windows'
        shell: pwsh

      - name: "Print QEMU Version"
        run: qemu-system-x86_64 --version

      - name: "Run Test Framework"
        run: cargo xtest
        # run: CARGO_LOG=trace cargo xtest
        shell: bash
        working-directory: "testing"